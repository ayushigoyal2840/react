[{"E:\\reactapp\\react\\to-do-list\\src\\index.js":"1","E:\\reactapp\\react\\to-do-list\\src\\reportWebVitals.js":"2","E:\\reactapp\\react\\to-do-list\\src\\App.js":"3","E:\\reactapp\\react\\to-do-list\\src\\components\\Message.js":"4","E:\\reactapp\\react\\to-do-list\\src\\components\\Counter.js":"5","E:\\reactapp\\react\\to-do-list\\src\\components\\Users.js":"6","E:\\reactapp\\react\\to-do-list\\src\\components\\Todo.js":"7"},{"size":222,"mtime":1610002949860,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":332,"mtime":1610037453912,"results":"11","hashOfConfig":"9"},{"size":680,"mtime":1610027792579,"results":"12","hashOfConfig":"9"},{"size":822,"mtime":1610028802264,"results":"13","hashOfConfig":"9"},{"size":1299,"mtime":1610029551133,"results":"14","hashOfConfig":"9"},{"size":2720,"mtime":1610112226224,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ga6h0f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"E:\\reactapp\\react\\to-do-list\\src\\index.js",[],["33","34"],"E:\\reactapp\\react\\to-do-list\\src\\reportWebVitals.js",[],["35","36"],"E:\\reactapp\\react\\to-do-list\\src\\App.js",[],"E:\\reactapp\\react\\to-do-list\\src\\components\\Message.js",[],"E:\\reactapp\\react\\to-do-list\\src\\components\\Counter.js",[],"E:\\reactapp\\react\\to-do-list\\src\\components\\Users.js",["37","38"],"E:\\reactapp\\react\\to-do-list\\src\\components\\Todo.js",["39"],"import React,{useState} from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Todo = () => {\r\n    const[todotext,setTodotext] = useState(\"\");\r\n    const [todo,setTodo] = useState ([\r\n        {\r\n            id:1,\r\n            text:\"drinnking water\",\r\n            iscompleted:false\r\n        },\r\n        {id:2,\r\n            text:\"coding\",\r\n            iscompleted:false},\r\n        {id:3,\r\n            text:\"meditation\",\r\n            iscompleted:true}\r\n    ])\r\n\r\n    const changesetTodotext = (event) => {\r\n        // console.log(event.target.value);\r\n        setTodotext(event.target.value);\r\n        \r\n    }\r\n\r\n    const AddTodo = () => {\r\n        const newTodo = {\r\n            id: uuidv4(),\r\n            text:todotext,\r\n            iscompleted:false\r\n\r\n        };\r\n\r\n        console.log(newTodo);\r\n        setTodo([...todo, newTodo]);\r\n        setTodotext(\"\");\r\n    };\r\n\r\n    const completeTodo = id => {\r\n            let updatedTodos = todo.map(todo => {\r\n                if(todo.id == id){\r\n                    todo.iscompleted = true;\r\n                    return todo;\r\n                }\r\n                return todo;\r\n            });\r\nconsole.log(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <div className=\"card shadow\">\r\n            <div className=\"card-header\">\r\n            <div class=\"input-group\">\r\n  <input \r\n  type=\"text\" \r\n  className=\"form-control\" \r\n  placeholder=\"Enter your task\" \r\n  value={todotext}\r\n  onChange={(event) => changesetTodotext(event)}\r\n\r\n  />\r\n  <button className=\"btn btn-primary\" onClick={AddTodo}>Add</button>\r\n</div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <ul className=\"list-group list-group-flush\">\r\n                {\r\n                    todo.map(todo => {\r\n                        return (\r\n                            <li \r\n                            className=\"list-group-item\" \r\n                            key={todo.id}>\r\n                                <input \r\n                                type=\"checkbox\" \r\n                                checked={todo.iscompleted}\r\n                                onChange={() => completeTodo(todo.id)}\r\n                                />\r\n                                <span className={todo.iscompleted ? `completed`:null}>\r\n                                {todo.text}\r\n                                </span>\r\n                                </li>\r\n                            // <li className=\"list-group-item\">{todo.todo}</li>\r\n                            // <li className=\"list-group-item\">{todo.todo}</li>\r\n\r\n                        );\r\n                    })\r\n                }\r\n\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"50","line":4,"column":19,"nodeType":"48","messageId":"49","endLine":4,"endColumn":27},{"ruleId":"51","severity":1,"message":"52","line":41,"column":28,"nodeType":"53","messageId":"54","endLine":41,"endColumn":30},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'setUsers' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]